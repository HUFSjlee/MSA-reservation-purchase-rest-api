version: '3.9'
services:
  rds:
    image: mysql:8.0
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ./rds.sql:-entrypoint-initdb.d/rds.sql
    environment:
      MYSQL_DATABASE: hufsjlee
      MYSQL_USER: hufsjlee
      MYSQL_PASSWORD: 123123
      MYSQL_ROOT_PASSWORD: 123123
      TZ: ASIA/SEOUL
    networks:
      - msa-network

  api-gateway:
#    image: api-gateway:tag
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - msa-network


  user-service:
#    image: user-service-server:tag
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - rds
    links:
      - rds
    networks:
      - msa-network

  newsfeed-service:
#    image: newsfeed-service-server:tag
    build:
      context: ./newsfeed-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - rds
    links:
      - rds
    networks:
      - msa-network

  activities-service:
#    image: activities-service-server:tag
    build:
      context: ./activities-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - rds
    links:
      - rds
    networks:
      - msa-network

  product-service:
#    image: product-service-server:tag
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - rds
      - redis
    links:
      - rds
      - redis
    environment:
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379

    networks:
      - msa-network

  order-service:
#    image: order-service-server:tag
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      - rds
      - redis
    links:
      - rds
      - redis
    environment:
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379

    networks:
      - msa-network

  stock-service:
#    image: stock-service-server:tag
    build:
      context: ./stock-service
      dockerfile: Dockerfile
    ports:
      - "8086:8086"
    depends_on:
      - rds
      - redis
    links:
      - rds
      - redis
    environment:
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379

    networks:
      - msa-network

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    networks:
      - msa-network

networks:
  msa-network:
    driver: bridge
